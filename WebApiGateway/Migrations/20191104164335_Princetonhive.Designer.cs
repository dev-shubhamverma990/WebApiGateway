// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApiGateway.Entities;

namespace WebApiGateway.Migrations
{
    [DbContext(typeof(PrincetonhiveContext))]
    [Migration("20191104164335_Princetonhive")]
    partial class Princetonhive
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WebApiGateway.Entities.TblCityMaster", b =>
                {
                    b.Property<int>("Cityid");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("Stateid");

                    b.HasKey("Cityid");

                    b.ToTable("tblCityMaster");
                });

            modelBuilder.Entity("WebApiGateway.Entities.TblClassMaster", b =>
                {
                    b.Property<int>("Classid");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("date");

                    b.HasKey("Classid");

                    b.ToTable("tblClassMaster");
                });

            modelBuilder.Entity("WebApiGateway.Entities.TblCountryMaster", b =>
                {
                    b.Property<int>("Countryid");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Phonecode")
                        .IsRequired()
                        .HasColumnType("character varying(1000)");

                    b.HasKey("Countryid");

                    b.ToTable("tblCountryMaster");
                });

            modelBuilder.Entity("WebApiGateway.Entities.TblEnquiry", b =>
                {
                    b.Property<int>("EnquiryId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("character varying(50000)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("character varying(1000)");

                    b.HasKey("EnquiryId");

                    b.ToTable("tblEnquiry");
                });

            modelBuilder.Entity("WebApiGateway.Entities.TblExceptionLog", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("ErrorCode")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ErrorDescription")
                        .IsRequired()
                        .HasColumnType("character varying(50000)");

                    b.Property<DateTime>("LogDateTime")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("tblException_Log");
                });

            modelBuilder.Entity("WebApiGateway.Entities.TblRegistration", b =>
                {
                    b.Property<int>("RegistrationId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("character varying(5000)");

                    b.Property<int>("City");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Country");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("FatherEducation")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FatherEmail")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FatherMobile")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FatherOccupation")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Mobileno")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("MotherEducation")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("MotherEmail")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("MotherMobile")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("MotherOccupation")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SchoolCode")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Session")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<int>("State");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.HasKey("RegistrationId");

                    b.ToTable("tblRegistration");
                });

            modelBuilder.Entity("WebApiGateway.Entities.TblRoleMaster", b =>
                {
                    b.Property<int>("Roleid");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("RoleType")
                        .IsRequired()
                        .HasColumnType("character varying(2000)");

                    b.HasKey("Roleid");

                    b.ToTable("tblRoleMaster");
                });

            modelBuilder.Entity("WebApiGateway.Entities.TblSchool", b =>
                {
                    b.Property<int>("Schoolid");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ContactPersonMobile")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ContactPersonName")
                        .IsRequired()
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("SchoolAddress")
                        .IsRequired()
                        .HasColumnType("character varying(2000)");

                    b.Property<int>("SchoolCity");

                    b.Property<string>("SchoolCode")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<int>("SchoolCountry");

                    b.Property<string>("SchoolDescription")
                        .IsRequired()
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("SchoolEmail")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SchoolLogo")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("SchoolPhone")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SchoolPostalCode")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<int>("SchoolState");

                    b.Property<string>("SchoolWebsite")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.HasKey("Schoolid");

                    b.ToTable("tblSchool");
                });

            modelBuilder.Entity("WebApiGateway.Entities.TblSectionMaster", b =>
                {
                    b.Property<int>("Sectionid");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("date");

                    b.HasKey("Sectionid");

                    b.ToTable("tblSectionMaster");
                });

            modelBuilder.Entity("WebApiGateway.Entities.TblSessionMaster", b =>
                {
                    b.Property<int>("Sessionid");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("SessionName")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("date");

                    b.HasKey("Sessionid");

                    b.ToTable("tblSessionMaster");
                });

            modelBuilder.Entity("WebApiGateway.Entities.TblStateMaster", b =>
                {
                    b.Property<int>("Stateid");

                    b.Property<int>("Countryid");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.HasKey("Stateid");

                    b.ToTable("tblStateMaster");
                });

            modelBuilder.Entity("WebApiGateway.Entities.TblUserAuth", b =>
                {
                    b.Property<int>("UserAuthId");

                    b.Property<int>("ModifyBy");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("date");

                    b.Property<string>("UserAuthorities")
                        .IsRequired()
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.HasKey("UserAuthId");

                    b.ToTable("tblUserAuth");
                });

            modelBuilder.Entity("WebApiGateway.Entities.TblUserLoginHst", b =>
                {
                    b.Property<int>("UserLoginHstid")
                        .HasColumnName("UserLoginHSTId");

                    b.Property<DateTime>("LoginDateTime")
                        .HasColumnType("date");

                    b.Property<DateTime>("LogoutDateTime")
                        .HasColumnType("date");

                    b.Property<int>("UserName");

                    b.HasKey("UserLoginHstid");

                    b.ToTable("tblUserLogin_HST");
                });

            modelBuilder.Entity("WebApiGateway.Entities.UserLogin", b =>
                {
                    b.Property<int>("UserLoginId");

                    b.Property<string>("Captcha")
                        .HasColumnType("character varying(500)");

                    b.Property<string>("City")
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Mobile")
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("character varying(500)");

                    b.Property<string>("UserRole")
                        .HasColumnType("character varying(500)");

                    b.HasKey("UserLoginId");

                    b.ToTable("UserLogin");
                });
#pragma warning restore 612, 618
        }
    }
}
